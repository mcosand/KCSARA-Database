var DatabaseAccountModel=function(e){this.merge=function(e){$.extend(this,e),this.lastActive=moment(this.lastActive),this.lastPassword=moment(this.lastPassword),this.lastLocked=this.lastLocked?moment(this.lastLocked):null},this.merge(e),this.groups=[],this.groups.loaded=!1,this.linkedMember={},this.linkedMember.loaded=!1};angular.module("sarDatabase").directive("validatePasswordCharacters",function(){var e=[/\d+/,/[a-z]+/,/[A-Z]+/,/\W+/,/^\S+$/];return{require:"ngModel",link:function(o,r,s,t){t.$validators.passwordCharacters=function(o){if(!o)return!0;var r=!0;return angular.forEach(e,function(e){r=r&&e.test(o)}),r}}}}),angular.module("sarDatabase").directive("statusGlyph",function(){return{restrict:"E",template:"<i ng-class=\"{'text-success': test, 'fa-check': test, 'fa-exclamation': !test, 'text-danger': !test}\" class=\"fa\"></i>",scope:{test:"="}}}),angular.module("sarDatabase").service("AccountService",["$http","$q",function(e,o){self=this,$.extend(this,{accounts:{},groups:{},initAccount:function(e){var o;return e.name&&(o=new DatabaseAccountModel(e),self.accounts[e.name]=o),o},loadGroups:function(r){var s=self.accounts[r],t=o.defer();return s.groups.loaded?(t.resolve(s.groups),t):(s.groups.length=0,s.groups.loading=!0,void e({method:"GET",url:window.appRoot+"api/account/rolesforuser/"+r}).success(function(e){$.each(e,function(e,o){self.groups[o]||(self.groups[o]={name:o,groups:[],canEdit:self.rolesIManage.indexOf(o)>=0},self.groups[o].groups.loaded=!1,s.groups.push($.extend({collapsed:!0,remove:!1},self.groups[o])))}),delete s.groups.loading,s.groups.loaded=!0,t.resolve(e)}).error(function(e){t.reject(e)}))},loadMoreGroups:function(r){var s=self.groups[r.name],t=o.defer();return s.groups.loaded?(t.resolve(),t.promise):(e({method:"GET",url:window.appRoot+"api/account/rolesforrole/"+r.name}).success(function(e){$.each(e,function(e,o){self.groups[o]||(self.groups[o]={name:o,groups:[]},self.groups[o].groups.loaded=!1),s.groups.push($.extend({collapsed:!0,remove:!1},self.groups[o]))}),s.groups.loaded=!0}),t.promise)},loadLinkedMember:function(r){var s=self.accounts[r],t=o.defer();return s.linkedMember.loaded?(t.resolve(s.linkedMember),t.promise):(s.linkedMember.loading=!0,e({method:"GET",url:window.appRoot+"api/members/byusername/"+r}).success(function(e){1==e.length&&(s.linkedMember.id=e[0].Id,s.linkedMember.name=e[0].Name,s.linkedMember.units=e[0].Units,s.linkedMember.dem=e[0].DEM),delete s.linkedMember.loading,s.linkedMember.loaded=!0,t.resolve(e)}).error(function(e){t.reject(e)}),t.promise)},getMemberAccount:function(r){var s=o.defer();return e({method:"GET",url:window.appRoot+"api/members/accountfor/"+r}).success(function(e){s.resolve(e)}).error(function(e){s.reject(e)}),s.promise},save:function(r){var s=o.defer();return r.linkedMember.loaded&&delete r.linkedMember.loaded,e({method:"PUT",url:window.appRoot+"api/account",data:r}).success(function(e){s.resolve(e)}).error(function(e){s.reject(e)}),s.promise},setPassword:function(r){if("set"==r.type)return self.save($.extend({},r.account,{password:r.password}));var s=o.defer();return e({method:"POST",url:window.appRoot+"api/account/resetpassword/"+r.account.name}).success(function(e){s.resolve()}).error(function(e){s.reject(e)}),s.promise}})}]),angular.module("sarDatabase").service("EventsService",["$http","$q",function(e,o){self=this,$.extend(this,{list:function(r,s,t){var n=o.defer();r.length=0,r.loading=!0,e({method:"GET",url:window.appRoot+"api/"+s+"/list/"+t}).success(function(e){$.each(e.events,function(e,o){o.date=moment(o.date),r.unshift(o)}),r.people=e.people,r.miles=e.miles,r.hours=e.hours,delete r.loading,r.loaded=!0,n.resolve(e)}).error(function(e){n.reject(e)})},years:function(r,s){var t=o.defer();return e({method:"GET",url:window.appRoot+"api/"+s+"/years"}).success(function(e){r.length=0,r.push.apply(r,e),t.resolve(e)}).error(function(e){t.reject(e)}),t.promise}})}]);