@{ 
  ViewBag.NgModules = ViewBag.NgModules ?? new List<string>();
  ViewBag.NgModules.AddRange(new[] { "editModals", "ng-pros.directive.autocomplete" });
}
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en" @(ViewBag.NgApp != null ? new HtmlString("ng-app=\"" + ViewBag.NgApp + "\"") : new HtmlString(string.Empty))>
<head>
  <!-- Force latest IE rendering engine or ChromeFrame if installed -->
  <!--[if IE]><meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1"><![endif]-->
  <meta charset="utf-8">
  <meta http-equiv="X-UA-Compatible" content="IE=edge">
  <meta content="width=device-width, initial-scale=1, minimum-scale=1, user-scalable=yes" name="viewport">
  <link rel="apple-touch-icon" href="~/apple-touch-icon.png" />
  <title>@ViewData["Title"] - @Strings.DatabaseName</title>
  <script type="text/javascript">window.appRoot = '@Url.Content("~/")'; var errorUrl = '@Url.Content("~/api/telemetry/error")';</script>
  @Styles.Render("~/Content/bootstrap")
  @Scripts.Render("~/scripts/ng-core")
  <script type="text/javascript">
    var atoken = @{ 
        var user = User as System.Security.Claims.ClaimsPrincipal;
        var token = user == null ? null : (user.FindFirst("access_token") == null ? null : user.FindFirst("access_token").Value);
        <text>@(new HtmlString(token == null ? "null" : "'" + token + "'"))</text>;
      };
      angular.module('sarDatabase', @Html.ToJson((object)(ViewBag.NgModules ?? new object[0]))).run(function($http) {
        if (atoken) $http.defaults.headers.common.Authorization = 'Bearer ' + atoken;
      });;
  </script>
  @Scripts.Render("~/scripts/ng-site")

  @RenderSection("head", false)
  @{
    var insightsKey = System.Configuration.ConfigurationManager.AppSettings["applicationInsightsKey"];
    if (!string.IsNullOrWhiteSpace(insightsKey))
    {
      <script type='text/javascript'>
        var appInsights=window.appInsights||function(config)
        {
            function r(config){ t[config] = function(){ var i = arguments; t.queue.push(function(){ t[config].apply(t, i)})} }
            var t = { config:config},u=document,e=window,o='script',s=u.createElement(o),i,f;for(s.src=config.url||'//az416426.vo.msecnd.net/scripts/a/ai.0.js',u.getElementsByTagName(o)[0].parentNode.appendChild(s),t.cookie=u.cookie,t.queue=[],i=['Event','Exception','Metric','PageView','Trace','Ajax'];i.length;)r('track'+i.pop());return r('setAuthenticatedUserContext'),r('clearAuthenticatedUserContext'),config.disableExceptionTracking||(i='onerror',r('_'+i),f=e[i],e[i]=function(config, r, u, e, o) { var s = f && f(config, r, u, e, o); return s !== !0 && t['_' + i](config, r, u, e, o),s}),t
        }({
            instrumentationKey:'@insightsKey'
        });

        window.appInsights=appInsights;
        appInsights.trackPageView();
      </script>
    }
  }
</head>
<body class="skin-yellow sidebar-mini" @(ViewBag.NgController != null ? new HtmlString("ng-controller=\"" + ViewBag.NgController + "\"") : new HtmlString(string.Empty))>
  <div class="wrapper">
    @RenderBody()
  </div>
  @RenderSection("scripts", false)
  <script type="text/javascript">
  $(document).ready(function() {
  $.AdminLTE.layout.activate()
  })
  </script>
  @if (ViewBag.GoogleAnalytics != null)
  {
  <script>
  (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
  (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
  m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
  })(window,document,'script','//www.google-analytics.com/analytics.js','ga');

  ga('create', '@ViewBag.GoogleAnalytics', 'auto');
  ga('send', 'pageview');

  </script>
  }
</body></html>
