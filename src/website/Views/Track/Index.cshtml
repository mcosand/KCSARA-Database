@{
  ViewBag.Title = "Track Responders";
}
@section head {
  @Styles.Render("~/content/leaflet.css")
  <script src="//maps.google.com/maps/api/js?v=3.2&sensor=false"></script>
  @Scripts.Render("~/scripts/leaflet")
  <style type="text/css">
  body {
    padding: 0px;
    margin: 0px;
  }

  #map {
    width: 100%;
    height: 600px;
  }

  .leaflet-control-layers-toggle {
    background-image: url(@Url.Content("~/content/images/maps/layers.png"));
  }
  </style>

}

<div id="map"></div>

<script type="text/javascript">
  var doResize = function () {
    $('#map').height($(window).height() - $('#map').offset().top - 2);
  }

  var map;

  $(document).ready(function () {
    $('#content').css('padding-top', '0px').css('padding-bottom', '0px');
    doResize();

    L.Icon.Default.imagePath = '@Url.Content("~/Content/images/maps")';

    // create a map in the "map" div, set the view to a given place and zoom
    map = L.map('map').setView([47.59320, -121.82602], 10);

    var baseLayers = {
      "OpenStreetMap": L.tileLayer('//{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
        attribution: '&copy; <a href="http://osm.org/copyright">OpenStreetMap</a> contributors'
      })//.addTo(map)
    };

    if (typeof google !== 'undefined') {
      baseLayers["Google Satellite"] = new L.Google('HYBRID');
      baseLayers["Google Streets"] = new L.Google('ROADMAP');
      map.addLayer(baseLayers["Google Streets"]);
    }

    var geoJsonUrl = '/nwtopo/contours/{z}/{x}/{y}.json';
    var geoTileLayer = new L.TileLayer.GeoJSON(geoJsonUrl, {
      clipTiles: true,
    },
      {
        style: function (f) {
          return {
            color: '#AF591C',
            weight: (f.properties.type == 0x22) ? 2 : 1,
            opacity: 0.7,
            clickable: false
          };
        }
      });//.addTo(map);

    var trailsLayer = new L.TileLayer.GeoJSON('/nwtopo/trails/{z}/{x}/{y}.json', {
      clipTiles: true,
    },
    {
      style: function (f) {
        return (f.properties.type == 0x16) ? {
          color: '#D00',
          weight: 2.4,
          opacity: 0.8
        } : {
          color: '#222',
          weight: 1.5,
          opacity: 0.7,
          dashArray: '5, 5'
        };
      },
      onEachFeature: function (feature, layer) {
        if (feature.properties && feature.properties.name) {
          var popupString = '<div class="popup">' + String(feature.properties.name)
            .replace(/&/g, '&amp;')
            .replace(/"/g, '&quot;')
            .replace(/'/g, '&#39;')
            .replace(/</g, '&lt;')
            .replace(/>/g, '&gt;') + '</div>';
          layer.bindPopup(popupString);
        }
      }
    });//.addTo(map);

    var trackLayer = L.layerGroup([]).addTo(map);

    var overlays = {
      "Responders": trackLayer,
      "Trails": trailsLayer,
      "Contours (ft)": geoTileLayer
    }

    L.control.layers(baseLayers, overlays).addTo(map);

    $.getJSON('@Url.Content("~/api/track/getCurrent")')
    .done(function (data) {
      console.log(data);
      trackLayer.clearLayers();
      for (var i=0;i<data.length;i++) {
        L.marker([data[i].Lat, data[i].Lon]).addTo(trackLayer).bindPopup(data[i].Username + ' ' + data[i].Time).openPopup();
      }
    });

    $(window).resize(doResize);
  })
</script>
