@*
  * Copyright 2015 Matthew Cosand
*@
@{
  ViewBag.Title = Strings.DatabaseName + " ";
  ViewBag.PageModelRequire = "PageModel";
  ViewBag.PageData = new Dictionary<string, string> {
    { "initial-tab", "contact" },
    { "member-id", ViewBag.MemberId.ToString() },
    { "photo-base", Url.Content("~/api/Members/GetPhoto/")},
    { "no-photo", Url.Content("~/content/images/no-photo.jpg")}
  };
}
<div class="row" data-bind="with:page" style="padding-left:15px; padding-right:15px;">
  <div class="col-xs-12 overlay-container" style="margin-bottom:1em; border: solid 1px #ccc; border-radius:9px;">
    <div class="overlay" data-bind="visible: topInfo.loading">LOADING !!!</div>
    <div class="row" data-bind="with:topInfo">
      <!-- ko if: $data -->
      <div class="col-xs-2" style="max-width:150px; padding:0px">
        <img src="@ViewBag.PageData["no-photo"]" class="img-responsive" data-bind="attr: { src: photoPath }" style="border-right:solid 1px #ccc; border-radius:8px 0px 0px 8px" />
      </div>
      <div class="col-xs-10">
        <h2 data-bind="text: name"></h2>
        <div data-bind="text: '@Strings.IdNumber: ' + idNumber"></div>
      </div>
      <!-- /ko -->
    </div>
  </div>
</div>
<ul class="nav nav-tabs" data-bind="with:page">
  <li role="presentation" data-bind="css: { active: activeTab() == 'contact' }"><a href="#" data-bind="click:pickTab" data-tab="contact">Contact</a></li>
  <li role="presentation" data-bind="css: { active: activeTab() == 'missions' }"><a href="#" data-bind="click:pickTab" data-tab="missions">Missions</a></li>
  <li role="presentation" data-bind="css: { active: activeTab() == 'training' }"><a href="#" data-bind="click:pickTab" data-tab="training">Training</a></li>
  <li role="presentation" class="dropdown" data-bind="css: { active: isOtherTab }">
    <a class="dropdown-toggle" data-toggle="dropdown" href="#" role="button" aria-expanded="false">
      Other <span class="caret"></span>
    </a>
    <ul class="dropdown-menu pull-right" role="menu">
      <li class="pull-right"><a href="#" data-bind="click:pickTab" data-tab="other_medical">Medical</a></li>
    </ul>
  </li>
</ul>
<!-- ko with: page -->
<div data-bind="fadeVisible: activeTab() == 'contact', if: activeTab() == 'contact'" class="tab-pane">
  <div class="row">
    <div class="col-xs-12 col-sm-6">
      <div class="panel panel-primary">
        <div class="panel-heading">@Strings.ContactNumbers</div>
        <!-- ko component: { name: 'contact-numbers', params: {memberId: memberId }} -->
        <!-- /ko -->
      </div>
    </div>
    <div class="col-xs-12 col-sm-6">
      <div class="panel panel-primary">
        <div class="panel-heading">@Strings.Addresses</div>
        <!-- ko component: { name: 'contact-addresses', params: {memberId: memberId }} -->
        <!-- /ko -->
      </div>
    </div>
  </div>
</div>
<div data-bind="fadeVisible: activeTab() == 'missions', if: activeTab() == 'missions'" style="display:none" class="tab-pane">
  <div class="row">
    <div class="col-xs-12">
      <div class="panel panel-primary overlay-container">
        <div class="panel-heading">Mission Participation</div>
        <!-- ko component: { name: 'member-events', params: {memberId: memberId, api: '@Url.Content("~/api/members/listmissions/")', linkUrl: '@Url.Content("~/Missions/Detail/{0}/#!roster")', eventText: '@Strings.Missions' }} -->
        <!-- /ko -->
      </div>
    </div>
  </div>
</div>
<div data-bind="fadeVisible: activeTab() == 'training', if: activeTab() == 'training'" style="display:none" class="tab-pane">
  <div class="row visible-xs">
    <div class="col-xs-12" style="margin-bottom: .5em">
      <a href="#completed">Completed Training</a><br/>
      <a href="#attendance">Training Attendance</a>
    </div>
  </div>
  <div class="row">
    <div class="col-xs-12 col-sm-6">
      <div class="panel panel-primary overlay-container">
        <div class="panel-heading">Core Competencies</div>
        <!-- ko component: { name: 'core-competency-status', params: {memberId: memberId, api: '@Url.Content("~/api/trainingrecords/memberstatus/")', goodness: trainingCurrent}} -->
        <!-- /ko -->
      </div>
    </div>
    <div class="col-xs-12 col-sm-6" id="completed">
      <div class="panel panel-primary overlay-container">
        <div class="panel-heading">Completed Training</div>
        <!-- ko component: { name: 'training-record-list', params: {memberId: memberId, api: '@Url.Content("~/api/trainingrecords/computedformember/")'}} -->
        <!-- /ko -->
      </div>
    </div>
  </div>
  <div class="row" id="attendance">
    <div class="col-xs-12">
      <div class="panel panel-primary overlay-container">
        <div class="panel-heading">Training Attendance</div>
        <!-- ko component: { name: 'member-events', params: {memberId: memberId, api: '@Url.Content("~/api/members/listtrainings/")', linkUrl: '@Url.Content("~/Training/Detail/{0}/#!roster")', eventText: '@Strings.Training' }} -->
        <!-- /ko -->
      </div>
    </div>
  </div>
</div>
<!-- /ko -->
@section scripts {
  <script type="text/javascript">
    define('PageModel', ['knockout', 'moment', 'site/utils'], function PageModel(ko, moment, utils) {
      return function (params) {
        var self = this;
        var paneResources = {
          contact: ['site/components/contact-numbers', 'site/components/contact-addresses'],
          missions: ['site/components/member-events'],
          training: ['site/components/core-competency-status', 'site/components/training-record-list', 'site/components/member-events'],
        };

        self.memberId = $('body').data('memberId');
        self.trainingCurrent = ko.observable(true);
        self.activeTab = ko.observable();
        self.isOtherTab = ko.computed(function() { return self.activeTab() && self.activeTab().substring(0,5) == "other" });
        self.topInfo = ko.observable();
        self.topInfo.loading = ko.observable(true);

        self.switchTab = function (newTab) {
          if (paneResources[newTab]) {
            require(paneResources[newTab], function () {
              self.activeTab(newTab);
            });
          } else {
            self.activeTab(newTab);
          }
        }

        self.pickTab = function (newTab, evt) {
          if (evt) newTab = $(evt.currentTarget).data('tab') || "";
          self.switchTab(newTab);
          window.location.hash = '#!' + newTab;
        }

        self.load = function loadEvents() {
          self.topInfo.loading(true);
          utils.getJSON('/api/Members/CardInfo/' + self.memberId)
          .done(function (data) {
            data.photoPath = data.hasPhoto ? ($('body').data('photoBase') + data.id) : $('body').data('noPhoto');
            self.topInfo(data);
          })
          .fail(function (err) { utils.handleServiceError(err, self); })
          .always(function () { self.topInfo.loading(false); });
        };

        var initialTab = utils.hashBangInit($('body').data('initialTab'), self.switchTab);
        self.switchTab(initialTab);
      };
    });
  </script>
}
